{
  "openapi": "3.0.0",
  "info": {
    "title": "Motors Shop API",
    "description": "This is the official Motors Shop API",
    "termsOfService": "http://localhost:3000/api/terms",
    "contact": {
      "email": "rodrigojsdeveloper@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "API"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "summary": "User registration",
        "description": "This route will be responsible for registering the user",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              },
              "examples": {
                "users": {
                  "value": {
                    "name": "John doe",
                    "email": "johndoe@org.com",
                    "password": "Johndoe@123",
                    "cellphone": "99 99999-9999",
                    "address": {
                      "country": "United State",
                      "state": "Calif√≥rnia",
                      "city": "Mountain View",
                      "district": "Amphitheatre Pkwy",
                      "street": "Amphitheatre Pkwy",
                      "number": 1600,
                      "complement": "Googleplex",
                      "zip_code": 94043
                    },
                    "cpf": "00000000000",
                    "birthdate": "01/01/2001",
                    "is_seller": true,
                    "description": "Lorem Ipsum."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "List all users",
        "description": "This route will be responsible for listing all users",
        "tags": ["Users"],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "summary": "Profile user",
        "description": "This route will be responsible for seeing a user",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/{id}": {
      "patch": {
        "summary": "Update a user",
        "description": "This route will be responsible for updating the user",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Updating user",
            "required": true
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/products/{id}": {
      "get": {
        "summary": "Show all products",
        "description": "This route will be responsible for showing all products",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Show all products",
            "required": true
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/email/{email}": {
      "get": {
        "summary": "View a user",
        "description": "This route will be responsible for view a user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "View a user",
            "required": true
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/products": {
      "post": {
        "summary": "Create product",
        "description": "This route will be responsible for create product",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Products"
              },
              "examples": {
                "transaction": {
                  "value": {
                    "title": "A MercedesBenz Aclass",
                    "description": "Lorem Ipsum.",
                    "year": 2023,
                    "kilometers": 1,
                    "price": "R$ 1.000.000,00",
                    "vehicle_type": "car",
                    "cover_image": "https://img2.gratispng.com/20180511/hhe/kisspng-mercedes-benz-a-class-car-mercedes-benz-cla-200-d-5af54c9ad9ffb3.3060800415260253708929.jpg",
                    "gallery_image": "https://banner2.cleanpng.com/20180717/zg/kisspng-mercedes-benz-a-class-sports-car-suzuki-sx4-mercedes-a180-5b4ea1fd956e96.7297515215318799336121.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Show all products",
        "description": "This route will be responsible for showing all products",
        "tags": ["Products"],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "summary": "Specific product",
        "description": "This route will be responsible for showing a specific product",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "View specific product",
            "required": true
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Properties"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update product",
        "description": "This route will be responsible for updating the product",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Update product",
            "required": true
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deactive product",
        "description": "This route will be responsible for deactivate product",
        "tags": ["Products"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Deactive product",
            "required": true
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/comments/{product_id}": {
      "post": {
        "summary": "Create comment",
        "description": "This route will be responsible for create comment",
        "tags": ["Comments"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Create comment",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comments"
              },
              "examples": {
                "users": {
                  "value": {
                    "content": "Muito foda!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Comments"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List product reviews",
        "description": "This route will be responsible for listing product reviews",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "List product reviews",
            "required": true
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/signin": {
      "post": {
        "summary": "Login",
        "description": "This route will be responsible for login",
        "tags": ["Login"],

        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "johndoe@org.com",
                    "password": "Johndoe@123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Login"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "cellphone": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "birthdate": {
            "type": "string"
          },
          "is_seller": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "products": {
            "type": "Array"
          },
          "comments": {
            "type": "Array"
          },
          "date_joined": {
            "type": "Date"
          },
          "updated_at": {
            "type": "Date"
          },
          "address": {
            "type": "object",
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "number": {
            "type": "number"
          },
          "complement": {
            "type": "string"
          },
          "zip_code": {
            "type": "string"
          }
        }
      },
      "Products": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "year": {
            "type": "number"
          },
          "kilometers": {
            "type": "number"
          },
          "price": {
            "type": "string"
          },
          "vehicle_type": {
            "type": "string"
          },
          "cover_image": {
            "type": "string"
          },
          "gallery_image": {
            "type": "string"
          },
          "is_published": {
            "type": "boolean"
          },
          "user": {
            "type": "object",
            "$ref": "#/components/schemas/Users"
          }
        }
      },
      "Comments": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "Date"
          },
          "user": {
            "type": "object",
            "$ref": "#/components/schemas/Users"
          },
          "product": {
            "type": "object",
            "$ref": "#/components/schemas/Products"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
